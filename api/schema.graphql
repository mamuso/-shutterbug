### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


type Capture {
  createdAt: DateTime!
  device: Device!
  deviceScaleFactor: Int
  diff: Boolean!
  diffindex: Float
  id: String!
  page: Page!
  report: Report!
  slug: String!
  url: String
  urldiff: String
  urlmin: String
}

input CaptureCreateInput {
  createdAt: DateTime
  device: DeviceCreateOneWithoutCapturesInput!
  deviceScaleFactor: Int
  diff: Boolean
  diffindex: Float
  id: String
  page: PageCreateOneWithoutCapturesInput!
  report: ReportCreateOneWithoutCapturesInput!
  slug: String!
  sparkline: SparklineCreateOneWithoutCapturesInput
  url: String
  urldiff: String
  urlmin: String
}

input CaptureCreateManyWithoutDeviceInput {
  connect: [CaptureWhereUniqueInput!]
  create: [CaptureCreateWithoutDeviceInput!]
}

input CaptureCreateManyWithoutPageInput {
  connect: [CaptureWhereUniqueInput!]
  create: [CaptureCreateWithoutPageInput!]
}

input CaptureCreateManyWithoutReportInput {
  connect: [CaptureWhereUniqueInput!]
  create: [CaptureCreateWithoutReportInput!]
}

input CaptureCreateManyWithoutSparklineInput {
  connect: [CaptureWhereUniqueInput!]
  create: [CaptureCreateWithoutSparklineInput!]
}

input CaptureCreateWithoutDeviceInput {
  createdAt: DateTime
  deviceScaleFactor: Int
  diff: Boolean
  diffindex: Float
  id: String
  page: PageCreateOneWithoutCapturesInput!
  report: ReportCreateOneWithoutCapturesInput!
  slug: String!
  sparkline: SparklineCreateOneWithoutCapturesInput
  url: String
  urldiff: String
  urlmin: String
}

input CaptureCreateWithoutPageInput {
  createdAt: DateTime
  device: DeviceCreateOneWithoutCapturesInput!
  deviceScaleFactor: Int
  diff: Boolean
  diffindex: Float
  id: String
  report: ReportCreateOneWithoutCapturesInput!
  slug: String!
  sparkline: SparklineCreateOneWithoutCapturesInput
  url: String
  urldiff: String
  urlmin: String
}

input CaptureCreateWithoutReportInput {
  createdAt: DateTime
  device: DeviceCreateOneWithoutCapturesInput!
  deviceScaleFactor: Int
  diff: Boolean
  diffindex: Float
  id: String
  page: PageCreateOneWithoutCapturesInput!
  slug: String!
  sparkline: SparklineCreateOneWithoutCapturesInput
  url: String
  urldiff: String
  urlmin: String
}

input CaptureCreateWithoutSparklineInput {
  createdAt: DateTime
  device: DeviceCreateOneWithoutCapturesInput!
  deviceScaleFactor: Int
  diff: Boolean
  diffindex: Float
  id: String
  page: PageCreateOneWithoutCapturesInput!
  report: ReportCreateOneWithoutCapturesInput!
  slug: String!
  url: String
  urldiff: String
  urlmin: String
}

input CaptureWhereUniqueInput {
  id: String
  slug: String
}

scalar DateTime

type Device {
  captures(orderBy: DeviceCapturesOrderByInput, skip: Int): [Capture!]!
  createdAt: DateTime!
  deviceScaleFactor: Int
  id: String!
  name: String!
  slug: String!
  specs: String!
}

input DeviceCapturesOrderByInput {
  slug: OrderByArg
}

input DeviceCreateInput {
  captures: CaptureCreateManyWithoutDeviceInput
  createdAt: DateTime
  deviceScaleFactor: Int
  id: String
  name: String!
  slug: String!
  Sparkline: SparklineCreateManyWithoutDeviceInput
  specs: String!
}

input DeviceCreateOneWithoutCapturesInput {
  connect: DeviceWhereUniqueInput
  create: DeviceCreateWithoutCapturesInput
}

input DeviceCreateOneWithoutSparklineInput {
  connect: DeviceWhereUniqueInput
  create: DeviceCreateWithoutSparklineInput
}

input DeviceCreateWithoutCapturesInput {
  createdAt: DateTime
  deviceScaleFactor: Int
  id: String
  name: String!
  slug: String!
  Sparkline: SparklineCreateManyWithoutDeviceInput
  specs: String!
}

input DeviceCreateWithoutSparklineInput {
  captures: CaptureCreateManyWithoutDeviceInput
  createdAt: DateTime
  deviceScaleFactor: Int
  id: String
  name: String!
  slug: String!
  specs: String!
}

input DeviceWhereUniqueInput {
  id: String
  slug: String
}

type Mutation {
  createOneCapture(data: CaptureCreateInput!): Capture!
  createOneDevice(data: DeviceCreateInput!): Device!
  createOnePage(data: PageCreateInput!): Page!
  createOneReport(data: ReportCreateInput!): Report!
  createOneSparkline(data: SparklineCreateInput!): Sparkline!
}

enum OrderByArg {
  asc
  desc
}

type Page {
  captures(skip: Int): [Capture!]!
  createdAt: DateTime!
  endsAt: String
  id: String!
  reportcount: Int
  reports(skip: Int): [Report!]!
  slug: String!
  startsAt: String
}

input PageCreateInput {
  captures: CaptureCreateManyWithoutPageInput
  createdAt: DateTime
  endsAt: String
  id: String
  reportcount: Int
  reports: ReportCreateManyWithoutPagesInput
  slug: String!
  Sparkline: SparklineCreateManyWithoutPageInput
  startsAt: String
  url: String!
}

input PageCreateManyWithoutReportsInput {
  connect: [PageWhereUniqueInput!]
  create: [PageCreateWithoutReportsInput!]
}

input PageCreateOneWithoutCapturesInput {
  connect: PageWhereUniqueInput
  create: PageCreateWithoutCapturesInput
}

input PageCreateOneWithoutSparklineInput {
  connect: PageWhereUniqueInput
  create: PageCreateWithoutSparklineInput
}

input PageCreateWithoutCapturesInput {
  createdAt: DateTime
  endsAt: String
  id: String
  reportcount: Int
  reports: ReportCreateManyWithoutPagesInput
  slug: String!
  Sparkline: SparklineCreateManyWithoutPageInput
  startsAt: String
  url: String!
}

input PageCreateWithoutReportsInput {
  captures: CaptureCreateManyWithoutPageInput
  createdAt: DateTime
  endsAt: String
  id: String
  reportcount: Int
  slug: String!
  Sparkline: SparklineCreateManyWithoutPageInput
  startsAt: String
  url: String!
}

input PageCreateWithoutSparklineInput {
  captures: CaptureCreateManyWithoutPageInput
  createdAt: DateTime
  endsAt: String
  id: String
  reportcount: Int
  reports: ReportCreateManyWithoutPagesInput
  slug: String!
  startsAt: String
  url: String!
}

input PageWhereUniqueInput {
  id: String
  slug: String
}

type Query {
  capture(where: CaptureWhereUniqueInput!): Capture
  device(where: DeviceWhereUniqueInput!): Device
  page(where: PageWhereUniqueInput!): Page
  report(where: ReportWhereUniqueInput!): Report
  sparkline(where: SparklineWhereUniqueInput!): Sparkline
}

type Report {
  captures(skip: Int): [Capture!]!
  createdAt: DateTime!
  current: Boolean!
  id: String!
  pagecount: Int
  pages(skip: Int): [Page!]!
  slug: String!
}

input ReportCreateInput {
  captures: CaptureCreateManyWithoutReportInput
  createdAt: DateTime
  current: Boolean
  id: String
  pagecount: Int
  pages: PageCreateManyWithoutReportsInput
  slug: String!
  visible: Boolean
}

input ReportCreateManyWithoutPagesInput {
  connect: [ReportWhereUniqueInput!]
  create: [ReportCreateWithoutPagesInput!]
}

input ReportCreateOneWithoutCapturesInput {
  connect: ReportWhereUniqueInput
  create: ReportCreateWithoutCapturesInput
}

input ReportCreateWithoutCapturesInput {
  createdAt: DateTime
  current: Boolean
  id: String
  pagecount: Int
  pages: PageCreateManyWithoutReportsInput
  slug: String!
  visible: Boolean
}

input ReportCreateWithoutPagesInput {
  captures: CaptureCreateManyWithoutReportInput
  createdAt: DateTime
  current: Boolean
  id: String
  pagecount: Int
  slug: String!
  visible: Boolean
}

input ReportWhereUniqueInput {
  id: String
  slug: String
}

type Sparkline {
  data: [String!]!
  device: Device!
  id: String!
  page: Page!
  slug: String!
}

input SparklineCreatedataInput {
  set: [String!]
}

input SparklineCreateInput {
  captures: CaptureCreateManyWithoutSparklineInput
  data: SparklineCreatedataInput
  device: DeviceCreateOneWithoutSparklineInput!
  id: String
  page: PageCreateOneWithoutSparklineInput!
  slug: String!
}

input SparklineCreateManyWithoutDeviceInput {
  connect: [SparklineWhereUniqueInput!]
  create: [SparklineCreateWithoutDeviceInput!]
}

input SparklineCreateManyWithoutPageInput {
  connect: [SparklineWhereUniqueInput!]
  create: [SparklineCreateWithoutPageInput!]
}

input SparklineCreateOneWithoutCapturesInput {
  connect: SparklineWhereUniqueInput
  create: SparklineCreateWithoutCapturesInput
}

input SparklineCreateWithoutCapturesInput {
  data: SparklineCreatedataInput
  device: DeviceCreateOneWithoutSparklineInput!
  id: String
  page: PageCreateOneWithoutSparklineInput!
  slug: String!
}

input SparklineCreateWithoutDeviceInput {
  captures: CaptureCreateManyWithoutSparklineInput
  data: SparklineCreatedataInput
  id: String
  page: PageCreateOneWithoutSparklineInput!
  slug: String!
}

input SparklineCreateWithoutPageInput {
  captures: CaptureCreateManyWithoutSparklineInput
  data: SparklineCreatedataInput
  device: DeviceCreateOneWithoutSparklineInput!
  id: String
  slug: String!
}

input SparklineWhereUniqueInput {
  id: String
  slug: String
}
